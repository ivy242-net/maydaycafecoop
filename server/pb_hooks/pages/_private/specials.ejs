<%
    // Get timestamp for one week ago
    const oneWeekAgo = new Date();
    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
    const oneWeekAgoTimestamp = Math.floor(oneWeekAgo.getTime() / 1000);

    let kitchenSpecial, bakerySpecial, drinkSpecial;

    try {
        let kitchenSpecials = $app.findRecordsByFilter(
            "specials",
            `created >= ${oneWeekAgoTimestamp} && type = 'kitchen'`,
            "-created",                                   // sort
            1,                                            // limit
            0,                                             // offset
        );
        kitchenSpecial = kitchenSpecials.length > 0 ? kitchenSpecials[0] : null;
    } catch (err) {
        kitchenSpecial = null;
    }

    try {
        let bakerySpecials = $app.findRecordsByFilter(
            "specials",
            `created >= ${oneWeekAgoTimestamp} && type = 'bakery'`,
            "-created",                                   // sort
            1,                                            // limit
            0,                                             // offset
        );
        bakerySpecial = bakerySpecials.length > 0 ? bakerySpecials[0] : null;
    } catch (err) {
        bakerySpecial = null;
    }

    try {
        let drinkSpecials = $app.findRecordsByFilter(
            "specials",
            `created >= ${oneWeekAgoTimestamp} && type = 'drink'`,
            "-created",                                   // sort
            1,                                            // limit
            0,                                             // offset
        );
        drinkSpecial = drinkSpecials.length > 0 ? drinkSpecials[0] : null;
    } catch(err) {
        drinkSpecial = null;
    }

    const specials = [kitchenSpecial, bakerySpecial, drinkSpecial].filter(s => s !== null);

    const getSpecialRotation = (index) => {
        switch (index) {
            case 0: return 'rotate-1';
            case 1: return '-rotate-2';
            case 2: return '-rotate-1';
            default: return '';
        }
    };

    const getMediaURL = (record, index = 0) => {
        if (!record || !record.get('media') || record.get('media').length === 0) {
            return null;
        }
        const appUrl = $app.settings().meta.appURL;
        const fileName = record.get('media')[index];
        if (!fileName) {
            return null;
        }
        return `${appUrl}/api/files/specials/${record.get('id')}/${fileName}`;
    };

    const getBadgeMarkup = (special) => {
        let badges = [];
        if (special.get('is_vegan')) {
            badges.push(`<div class="row flex items-center gap-1 font-bold opacity-80">
                <svg fill="var(--color-base-content)" width="1.5rem" height="1.5rem" viewBox="0 0 14 14" role="img" focusable="false" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"><path d="m 6.2195976,12.956011 c -1.732987,-0.2749 -3.214999,-1.1937 -4.153396,-2.5747 -0.518923,-0.7637998 -0.803526,-1.4816998 -0.974239,-2.4575998 -0.12305705,-0.7035 -0.12268405,-1.1758 0.0015,-1.8857 0.351394,-2.0089 1.607678,-3.6654 3.407872,-4.4935 1.36497,-0.62789998 3.069291,-0.71229998 4.481463,-0.222 1.6994874,0.5901 3.0662334,1.9327 3.6692334,3.6043 0.256585,0.7114 0.34946,1.2661 0.347955,2.0785 -0.0016,0.8803 -0.141275,1.5919 -0.459832,2.3429 -0.74798,1.7633998 -2.403437,3.1326998 -4.2480634,3.5136998 -0.610638,0.1262 -1.59023,0.1707 -2.072481,0.094 z m 2.023685,-1.2643 c 3.2144534,-0.889 4.6403014,-4.5151998 2.8740034,-7.3091998 -0.10538,-0.1667 -0.213171,-0.3031 -0.239535,-0.3032 -0.02636,-1e-4 -0.283452,0.2431 -0.571306,0.5404 l -0.5233704,0.5405 -0.306862,-0.581 c -0.168775,-0.3195 -0.306862,-0.5939 -0.306862,-0.6098 0,-0.016 0.177111,-0.2134 0.393579,-0.4389 0.216468,-0.2254 0.381724,-0.4195 0.367234,-0.4312 -0.778157,-0.6296 -1.819126,-0.9672 -2.964217,-0.9611 -1.385883,0.01 -2.558098,0.5389 -3.54708,1.6084 -0.771673,0.8346 -1.273182,2.1102 -1.273182,3.2385 0,0.8686 0.421675,2.1869 0.888675,2.7782 l 0.126095,0.1597 0.504721,-0.5006 0.504722,-0.5005 0.190875,0.3089 c 0.104982,0.17 0.283085,0.4072 0.395785,0.5272 l 0.20491,0.2183 -0.434763,0.4391998 -0.434762,0.4392 0.159667,0.1266 c 0.324301,0.2572 1.227235,0.648 1.772133,0.7671 0.68171,0.1489 1.556771,0.1265 2.21954,-0.057 z M 6.2255776,9.9656112 c -1.215463,-0.4908 -1.827329,-1.612 -1.656024,-3.0347 0.08239,-0.6842 0.143833,-0.9441 0.358912,-1.5184 0.572415,-1.5285 1.669015,-2.3383 2.625376,-1.9387 1.111683,0.4645 1.989675,2.3256 1.924735,4.0799 -0.02156,0.5824 -0.04673,0.6982 -0.234939,1.0805 -0.255251,0.5185 -0.727196,1.0003 -1.212095,1.2376 -0.47258,0.2311998 -1.352548,0.2768998 -1.805965,0.094 z m 0.735603,-0.5164 c 0.192328,-0.2125 0.105881,-0.4025 -0.263926,-0.58 -0.636734,-0.3057 -0.976709,-0.8054 -0.976709,-1.4356 0,-0.3045 -0.08593,-0.4165 -0.319334,-0.4165 -0.248851,0 -0.319334,0.115 -0.319334,0.5213 0,0.7724 0.495471,1.5355 1.213468,1.8689 0.421858,0.196 0.520824,0.2022 0.665835,0.042 z"/></svg>                
                Vegan
            </div>`);
        }
        if (special.get('is_glutenfree')) {
            badges.push(`<div class="row flex items-center gap-1 font-bold opacity-80">
                <svg fill="var(--color-base-content)" width="1.5rem" height="1.5em" viewBox="0 0 14 14" role="img" focusable="false" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"><path d="m 6.5232086,12.983925 c -2.402919,-0.158 -4.531541,-1.8703 -5.229897,-4.2071 -0.34855497,-1.1663 -0.36992997,-2.0644 -0.07666,-3.2205 0.568674,-2.2418 2.339724,-3.9468 4.578899,-4.4082 1.037499,-0.2137 1.617793,-0.2001 2.726022,0.064 2.0387694,0.486 3.7598434,2.2094 4.3337064,4.3396 0.186507,0.6923 0.172678,2.3026 -0.02602,3.0298 -0.652295,2.3874 -2.745872,4.1714 -5.1597044,4.3969 -0.279066,0.026 -0.794924,0.028 -1.146352,0.01 z m 1.870005,-1.3055 c 2.6262414,-0.7559 4.1102714,-3.5955 3.2415114,-6.2024 -0.185144,-0.5556 -0.632726,-1.3636 -0.755317,-1.3636 -0.04337,0 -0.260049,0.1828 -0.4815,0.4062 l -0.4026374,0.4063 -0.490059,0.038 c -0.269533,0.021 -0.626638,0.08 -0.793566,0.1306 l -0.303506,0.092 0,-0.2231 c 0,-0.1993 0.08346,-0.3083 0.781756,-1.0205 l 0.781755,-0.7973 -0.158769,-0.1225 c -0.258941,-0.1997 -1.149904,-0.6117 -1.59643,-0.7383 -0.559027,-0.1584 -1.780823,-0.1622 -2.36415,-0.01 -0.57961,0.1539 -1.501678,0.6218 -1.903167,0.9658 -0.784206,0.672 -1.405346,1.6445 -1.657139,2.5947 -0.151103,0.5702 -0.148372,1.7325 0.0055,2.3322 0.122827,0.4787 0.624422,1.568 0.782474,1.6992 0.08002,0.066 0.163853,0.012 0.513055,-0.3307 l 0.41741,-0.4101 0.105711,0.1598 c 0.05814,0.088 0.244017,0.3078 0.41306,0.4888 l 0.307351,0.3292 -0.354713,0.3691 c -0.195093,0.2031 -0.354714,0.3898 -0.354714,0.415 0,0.1328 1.054359,0.678 1.603793,0.8294 0.815667,0.2246 1.791557,0.2096 2.66231,-0.041 z m -2.609889,-1.8373 c -0.479798,-0.1974 -0.777824,-0.4356 -1.02311,-0.8178 -0.178315,-0.2779 -0.373502,-0.8657 -0.376522,-1.1338 -0.0017,-0.1494 0.767787,-0.052 1.178392,0.1484 0.63217,0.3093 1.18476,1.117 1.18476,1.7317 l 0,0.2212 -0.303506,0 c -0.167053,0 -0.463787,-0.068 -0.660014,-0.1482 z m 1.538584,-0.086 c 0,-0.4121 0.180926,-0.8288 0.521775,-1.2018 0.390043,-0.4267 0.864676,-0.6702 1.401442,-0.7189 l 0.396934,-0.036 -0.03637,0.3524 c -0.09721,0.9419 -0.926957,1.7343 -1.909129,1.8234 l -0.374648,0.034 0,-0.2531 z m -1.23099,-1.9428 c -0.874006,-0.2059 -1.55623,-0.9692 -1.673652,-1.8725 l -0.04064,-0.3126 0.354608,0.042 c 1.069923,0.1257 1.897788,0.8981 1.997431,1.8636 l 0.03606,0.3494 -0.216601,-0.01 c -0.119131,0 -0.324873,-0.032 -0.457204,-0.063 z m 1.246063,-0.2924 c 0.07748,-0.8545 0.737264,-1.5758 1.63447,-1.7869 0.600694,-0.1414 0.650712,-0.1287 0.650712,0.1657 0,0.7121 -0.590621,1.5169 -1.311154,1.7865 -0.209386,0.078 -0.521995,0.1591 -0.694688,0.1796 l -0.313986,0.037 0.03465,-0.3821 z m -0.521453,-1.3995 c -0.36342,-0.4139 -0.482759,-0.7524 -0.482759,-1.3694 0,-0.6143 0.119412,-0.9557 0.476551,-1.3624 0.23767,-0.2707 0.273925,-0.2595 0.57519,0.1784 0.208298,0.3027 0.38467,0.8478 0.38467,1.1888 0,0.4099 -0.234888,1.0416 -0.497203,1.3372 l -0.241529,0.2722 -0.21492,-0.2448 z"/></svg>
                Gluten Free
            </div>`);
        }
        return badges.join(' ');
    };

%>

<div class="carousel carousel-center -mx-[calc((var(--spacing)*4)+5vw)] w-dvw gap-4 px-[calc((var(--spacing)*4)+5vw)] lg:hidden">
    <% specials.map((special, index) => { %>
        <div class="carousel-item w-4/5 lg:w-1/3 flex flex-col">
            <% if (getMediaURL(special)) { %>
                <figure>
                <img src="<%= getMediaURL(special) %>" alt="Special" class="w-1/1 aspect-1/1 object-cover rounded-box shadow-lg <%= getSpecialRotation(index) %> z-10">
                </figure>
            <% } %>
            <div class="pt-5 text-xl">
                <%- special.get('content') %>
            </div>
            <div class="flex flex-col gap-1 py-2">
                <%- getBadgeMarkup(special) %>
            </div>
        </div>
    <% }) %>
</div>

<div class="hidden lg:flex w-1/1 gap-4">
    <% specials.map((special, index) => { %>
        <div class="carousel-item w-4/5 lg:w-1/3 flex flex-col">
            <% if (getMediaURL(special)) { %>
                <figure>
                <img src="<%= getMediaURL(special) %>" alt="Special" class="w-1/1 aspect-1/1 object-cover rounded-box shadow-lg <%= getSpecialRotation(index) %>">
                </figure>
            <% } %>
            <div class="pt-4 text-lg">
                <%- special.get('content') %>
            </div>
            <div class="flex flex-col gap-1 py-2">
                <%- getBadgeMarkup(special) %>
            </div>
        </div>
    <% }) %>
</div>